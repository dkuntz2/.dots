set nocompatible " with vi
filetype off

" set runtime path to include vundle, initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" vundle, manage vundle
Plugin 'gmarik/Vundle.vim'          " plugin manager
Plugin 'tpope/vim-sensible'         " sensible defaults

Plugin 'scrooloose/syntastic'       " syntax checker

Plugin 'bkad/CamelCaseMotion'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'ciaranm/detectindent'       " indentation detection like sublime
Plugin 'fatih/vim-go'
Plugin 'guns/vim-clojure-static'
Plugin 'jlanzarotta/bufexplorer'
Plugin 'kien/ctrlp.vim'
Plugin 'nono/jquery.vim'
Plugin 'plasticboy/vim-markdown'
Plugin 'Raimondi/delimitMate'       " auto closing of quotes/parens/etc
Plugin 'scrooloose/nerdcommenter'   " easy commenting
Plugin 'scrooloose/nerdtree'        " file browser
Plugin 'thoughtbot/vim-rspec'       " rspec helper
Plugin 'tmhedberg/matchit'
Plugin 'tpope/vim-endwise'          " auto insertion of `end` keyword in ruby
Plugin 'tpope/vim-fugitive'         " git support
Plugin 'tpope/vim-rails'            " rails stuffs
Plugin 'tpope/vim-surround'         " easy changing of 'wrapping' characters
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/tComment'
Plugin 'udalov/kotlin-vim'
Plugin 'tfnico/vim-gradle'
Plugin 'kchmck/vim-coffee-script'   " Coffee script syntax highlighting and such

" Color schemes
Plugin 'altercation/vim-colors-solarized'   " solarized
Plugin 'sjl/badwolf'                        " badwolf

call vundle#end()
filetype plugin indent on

" ============= Non-Vundle stuffs =============

" color stuffs
colorscheme badwolf
set background=dark
set t_Co=256

    " bad wolf settings
    let g:badwolf_darkgutter=1

" basics
set number
syntax on
set bs=2
set history=50
set ruler
set autoread
set linespace=0

" highlight searches
set hlsearch

" show stuffs
set showmatch
set showmode

"  stuffs
set autoindent
set smartindent
set incsearch
set nobackup
set copyindent
set ignorecase

" tab things
set tabstop=4
set shiftwidth=4
"set expandtab

set ts=4
set sw=4

" smart stuffs
set smartcase
set smarttab  " tabbing

" powerlines stuffs
set laststatus=2
set encoding=utf-8

" syntax highlighting?
au BufRead,BufNewFile Gemfile set filetype=ruby
au BufRead,BufNewFile *.md set filetype=markdown

" new things from http://statico.github.com/vim.html
:nmap \l :setlocal number!<CR>
:nmap \o :set paste!<CR>
:nmap \q :nohlsearch<CR> " turn off search highlighting

" force hjkl navigation
"nnoremap <Left> :echoe "Use h"<CR>
"nnoremap <Right> :echoe "Use l"<CR>
"nnoremap <Up> :echoe "Use k"<CR>
"nnoremap <Down> :echoe "Use j"<CR>

" move up and down "graphical" lines
:nmap j gj
:nmap k gk

:map <Down> gj
:map <Up> gk
:imap <Down> <C-o>gj
:imap <Up> <C-o>gk

" move between buffers
:nmap <C-e> :e#<CR>
:nmap \n :bnext<CR>
:nmap \p :bprev<CR>

" Automatic tab detection
autocmd BufReadPost * :DetectIndent
:let g:detectindent_preferred_expandtab = 1
:let g:detectindent_preferred_indent = 4

" ctrl-p stuffs
:let g:ctrlp_map = '<leader>ff'
:let g:ctrlp_match_window_bottom = 0
:let g:ctrlp_match_window_reversed = 0
:let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'
:let g:ctrlp_working_path_mode = 0
:let g:ctrlp_dotfiles = 0
:let g:ctrlp_switch_buffer = 0

" Why should I have to type :CtrlP?
:nmap <C-p> :CtrlPMixed<CR>

" NERDTree things
:nmap \nt :NERDTreeToggle<CR>
:nmap \nf :NERDTreeFocus<CR>

" make split screens nicer
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

set splitbelow
set splitright


set spell
"set tw=80
set wrap
set linebreak
set nolist

set colorcolumn=81 " 1 past 80...

" markin-downs, gitcommit, hgcommit
autocmd BufNewFile,BufRead *.md,*.markdown set tw=80

" jquery plugin
au BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery

" rspec mapping
nmap \rf :call RunCurrentSpecFile()<CR>
nmap \rs :call RunNearestSpec()<CR>
nmap \rl :call RunLastSpec()<CR>
map \ra :call RunAllSpecs()<CR>

set nofoldenable
let g:vim_markdown_folding_disabled=1

" fuck swp files
set backupdir=/tmp//
set directory=/tmp//

" gui stuff
if has('gui_running')
    set guifont=Fira\ Mono:h13
    set lines=30
    set columns=120
    autocmd vimenter * NERDTree
endif

" nerdtree stuffs
let NERDTreeMapOpenRecursively="+"
let NERDTreeMapCloseChildren="-"
